# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Cv {
  id: ID!
  rawText: String!
  shortDescription: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type PaginateParties {
  hasMore: Boolean!
  parties: [Party!]!
  totalCount: Int!
}

type PaginateVotes {
  hasMore: Boolean!
  totalCount: Int!
  votes: [Vote!]!
}

type PaginatedPoliticians {
  hasMore: Boolean!
  politicians: [Politician!]!
  totalCount: Int!
}

type Party {
  apiUrl: String!
  fullName: String!
  id: ID!
  label: String!
  shortName: String!
  style: PartyStyle!
}

type PartyStyle {
  backgroundColor: String!
  borderColor: String
  displayName: String!
  foregroundColor: String!
  id: ID!
}

type Politician {
  abgeordnetenwatchUrl: String!
  apiUrl: String!
  birthName: String
  cvs: [Cv!]!
  deceased: Boolean!
  deceasedDate: DateTime!
  education: String!
  entityType: String!
  fieldTitle: String!
  firstName: String!
  id: ID!
  label: String!
  lastName: String!
  occupation: String!
  party: Party!
  partyPast: String!
  politicianWeblinks: [PoliticianWeblink!]!
  positions: [Position!]!
  qidWikidata: String!
  residence: String!
  sex: PoliticianSexEnum
  sidejobs: [Sidejob!]!
  statisticQuestions: Float!
  statisticQuestionsAnswered: Float!
  votes: [Vote!]!
  yearOfBirth: Int
}

enum PoliticianSexEnum {
  DIVERSE
  FEMALE
  MALE
}

type PoliticianWeblink {
  id: ID!
  link: ID!
}

type Poll {
  apiUrl: String!
  entityType: String!
  fieldIntro: String
  fieldPollDate: String!
  id: ID!
  label: String!
}

type Position {
  id: ID!
  position: String!
  positionStatement: PositionStatement!
  reason: String
}

type PositionStatement {
  id: ID!
  statement: String!
}

type Query {
  paginateVotesByPolitician(id: String!, limit: Int!, offset: Int!): PaginateVotes!
  paginatedParties(limit: Int!, offset: Int!): PaginateParties!
  paginatedPoliticians(limit: Int!, offset: Int!): PaginatedPoliticians!
  party(id: String!): Party
  politician(id: String!): Politician
}

type Sidejob {
  apiUrl: String!
  created: Int!
  entityType: String!
  id: ID!
  incomeLevel: String
  interval: String
  label: String!
  sidejobOrganization: SidejobOrganization
}

type SidejobOrganization {
  apiUrl: String!
  entityType: String!
  id: ID!
  label: String!
}

type Vote {
  apiUrl: String!
  entityType: String!
  id: ID!
  label: String!
  poll: Poll!
  reasonNoShow: String
  reasonNoShowOther: String
  vote: String!
}
